Traceback (most recent call last):
  File "C:\Users\SAI VIGNESH CHINTALA\Desktop\work\port\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "C:\Users\SAI VIGNESH CHINTALA\Desktop\work\port\Lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\SAI VIGNESH CHINTALA\Desktop\work\port\Lib\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\SAI VIGNESH CHINTALA\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 720, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "C:\Users\SAI VIGNESH CHINTALA\Desktop\work\port\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "C:\Users\SAI VIGNESH CHINTALA\Desktop\work\port\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\SAI VIGNESH CHINTALA\Desktop\work\port\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pandas as pd
import sqlite3

# Load the dataset
file_path = "C:/Users/SAI VIGNESH CHINTALA/Desktop/ML1/breast-cancer.csv"
breast_cancer_data = pd.read_csv(file_path)

# Create a new SQLite database (or connect to an existing one)
conn = sqlite3.connect('C:/Users/SAI VIGNESH CHINTALA/Desktop/ML1/breast_cancer.db')
cursor = conn.cursor()

# Define the SQL schema for Patient Information table
create_patient_info_table = """
CREATE TABLE IF NOT EXISTS PatientInformation (
    id INTEGER PRIMARY KEY,
    diagnosis TEXT
);
"""

# Define the SQL schema for Feature Statistics table
create_feature_stats_table = """
CREATE TABLE IF NOT EXISTS FeatureStatistics (
    id INTEGER,
    radius_mean REAL,
    texture_mean REAL,
    perimeter_mean REAL,
    area_mean REAL,
    smoothness_mean REAL,
    compactness_mean REAL,
    concavity_mean REAL,
    concave_points_mean REAL,
    symmetry_mean REAL,
    fractal_dimension_mean REAL,
    radius_se REAL,
    texture_se REAL,
    perimeter_se REAL,
    area_se REAL,
    smoothness_se REAL,
    compactness_se REAL,
    concavity_se REAL,
    concave_points_se REAL,
    symmetry_se REAL,
    fractal_dimension_se REAL,
    radius_worst REAL,
    texture_worst REAL,
    perimeter_worst REAL,
    area_worst REAL,
    smoothness_worst REAL,
    compactness_worst REAL,
    concavity_worst REAL,
    concave_points_worst REAL,
    symmetry_worst REAL,
    fractal_dimension_worst REAL,
    FOREIGN KEY (id) REFERENCES PatientInformation(id)
);
"""

# Execute the table creation queries
cursor.execute(create_patient_info_table)
cursor.execute(create_feature_stats_table)

# Commit changes
conn.commit()

# Insert data into the tables from the breast cancer dataset
patient_info_data = breast_cancer_data[['id', 'diagnosis']]
feature_stats_data = breast_cancer_data.drop(columns=['diagnosis'])

# Insert data into PatientInformation table
patient_info_data.to_sql('PatientInformation', conn, if_exists='replace', index=False)

# Insert data into FeatureStatistics table
feature_stats_data.to_sql('FeatureStatistics', conn, if_exists='replace', index=False)

# Add an index to improve query performance
cursor.execute("CREATE INDEX IF NOT EXISTS idx_patient_id ON FeatureStatistics(id);")
conn.commit()

# Close the database connection
conn.close()

------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [1;32mIn[2], line 1[0m
[1;32m----> 1[0m [38;5;28;01mimport[39;00m [38;5;21;01mpandas[39;00m [38;5;28;01mas[39;00m [38;5;21;01mpd[39;00m
[0;32m      2[0m [38;5;28;01mimport[39;00m [38;5;21;01msqlite3[39;00m
[0;32m      4[0m [38;5;66;03m# Load the dataset[39;00m

[1;31mModuleNotFoundError[0m: No module named 'pandas'

